{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoda\\\\OneDrive\\\\Documents\\\\GitHub\\\\PostHeart-Frontend\\\\postheart-frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { BlobServiceClient } from '@azure/storage-blob';\nimport axios from 'axios';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useNavigate, Link } from 'react-router-dom';\n//TODO: make login page the map too?\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst Login = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new URLSearchParams();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      //Home is temporary? eventually implement on login to load in user map\n      if (response.status === 200 && !response.data.includes('Invalid')) {\n        setIsLoggedIn(true);\n      } else {\n        console.log(response.data);\n        console.error('Error logging in');\n      }\n    } catch (error) {\n      console.error('Error logging in', error.response);\n    }\n  };\n  if (isLoggedIn) {\n    //load markers and jaunt\n  }\n  function Map() {\n    _s();\n    const {\n      isLoaded,\n      loadError\n    } = useLoadScript({\n      googleMapsApiKey: \"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\"\n    });\n    const mapRef = useRef();\n    const onMapLoad = React.useCallback(map => {\n      mapRef.current = map;\n    }, []);\n  }\n  _s(Map, \"1qmCmcJn3Jppftwl0FFq5t2nSCI=\", true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s2(Login, \"8HunRjBrqKRQadtAFd6sqHyl9cw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","BlobServiceClient","axios","GoogleMap","LoadScript","Marker","useNavigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","center","lat","lng","Login","_s2","_s","$RefreshSig$","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","navigate","handleSubmit","event","preventDefault","formData","URLSearchParams","append","response","post","headers","status","data","includes","console","log","error","Map","isLoaded","loadError","useLoadScript","googleMapsApiKey","mapRef","onMapLoad","useCallback","map","current","children","onSubmit","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","to","mapContainerStyle","zoom","_c","$RefreshReg$"],"sources":["C:/Users/leoda/OneDrive/Documents/GitHub/PostHeart-Frontend/postheart-frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { BlobServiceClient } from '@azure/storage-blob';\r\nimport axios from 'axios';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { useNavigate , Link} from 'react-router-dom';\r\n//TODO: make login page the map too?\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const formData = new URLSearchParams();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:8080/login', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n        }\r\n      });\r\n      //Home is temporary? eventually implement on login to load in user map\r\n      if (response.status === 200 && !response.data.includes('Invalid')) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        console.log(response.data)\r\n        console.error('Error logging in');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in', error.response);\r\n    }\r\n  };\r\n  if (isLoggedIn) {\r\n      //load markers and jaunt\r\n  }\r\n  function Map() {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n      googleMapsApiKey: \"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\"\r\n    });\r\n    const mapRef = useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n  }\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Log in</button>\r\n      <p>\r\n        Don't have an account? <Link to=\"/Register\">Register</Link>\r\n      </p>\r\n    </form>\r\n    <LoadScript googleMapsApiKey=\"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\">\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={10}\r\n        >\r\n          {/* You can add markers or other components here */}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}