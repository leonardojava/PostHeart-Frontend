{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst errorMessage = \"DisableResponseDecompressionPolicy is not supported in browser environment\";\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy() {\n  return {\n    create: (_nextPolicy, _options) => {\n      throw new Error(errorMessage);\n    }\n  };\n}\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n    throw new Error(errorMessage);\n  }\n  async sendRequest(_request) {\n    throw new Error(errorMessage);\n  }\n}","map":{"version":3,"names":["BaseRequestPolicy","errorMessage","disableResponseDecompressionPolicy","create","_nextPolicy","_options","Error","DisableResponseDecompressionPolicy","constructor","nextPolicy","options","sendRequest","_request"],"sources":["C:\\Users\\leoda\\OneDrive\\Documents\\GitHub\\PostHeart-Frontend\\node_modules\\@azure\\core-http\\src\\policies\\disableResponseDecompressionPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResource } from \"../webResource\";\n\nconst errorMessage = \"DisableResponseDecompressionPolicy is not supported in browser environment\";\n\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy(): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw new Error(errorMessage);\n    },\n  };\n}\n\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw new Error(errorMessage);\n  }\n\n  public async sendRequest(_request: WebResource): Promise<HttpOperationResponse> {\n    throw new Error(errorMessage);\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA;;;AAGA,SACEA,iBAAiB,QAIZ,iBAAiB;AAIxB,MAAMC,YAAY,GAAG,4EAA4E;AAEjG;;;;AAIA,OAAM,SAAUC,kCAAkCA,CAAA;EAChD,OAAO;IACLC,MAAM,EAAEA,CAACC,WAA0B,EAAEC,QAA8B,KAAI;MACrE,MAAM,IAAIC,KAAK,CAACL,YAAY,CAAC;IAC/B;GACD;AACH;AAEA,OAAM,MAAOM,kCAAmC,SAAQP,iBAAiB;EACvEQ,YAAYC,UAAyB,EAAEC,OAA6B;IAClE,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,MAAM,IAAIJ,KAAK,CAACL,YAAY,CAAC;EAC/B;EAEO,MAAMU,WAAWA,CAACC,QAAqB;IAC5C,MAAM,IAAIN,KAAK,CAACL,YAAY,CAAC;EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}