{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoda\\\\OneDrive\\\\Documents\\\\GitHub\\\\PostHeart-Frontend\\\\postheart-frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState /*useRef*/ } from 'react';\n//import { BlobServiceClient } from '@azure/storage-blob';\nimport axios from 'axios';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { useNavigate, Link } from 'react-router-dom';\n//TODO: make new advanced marker component too i guess\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\nconst markers = [{\n  lat: 48.75112,\n  lng: -122.341431\n}\n// Add more markers as needed\n];\nconst center = {\n  lat: 48.75112,\n  lng: 238.74011\n};\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  //const navigate = useNavigate();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new URLSearchParams();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      //Home is temporary? eventually implement on login to load in user map\n      if (response.status === 200 && !response.data.includes('Invalid')) {\n        setIsLoggedIn(true);\n      } else {\n        console.log(response.data);\n        console.error('Error logging in');\n      }\n    } catch (error) {\n      console.error('Error logging in', error.response);\n    }\n  };\n  if (isLoggedIn) {\n    //load markers and jaunt\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_APIKEY,\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 7,\n        children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: center\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"7X2qaHaMGBDGWQUFTca5NuNu9SU=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","GoogleMap","LoadScript","Marker","useNavigate","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","containerStyle","width","height","markers","lat","lng","center","Login","_s","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","handleSubmit","event","preventDefault","formData","URLSearchParams","append","response","post","headers","status","data","includes","console","log","error","children","onSubmit","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","to","googleMapsApiKey","process","env","REACT_APP_APIKEY","mapContainerStyle","zoom","map","marker","index","position","_c","$RefreshReg$"],"sources":["C:/Users/leoda/OneDrive/Documents/GitHub/PostHeart-Frontend/postheart-frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState, /*useRef*/ } from 'react';\r\n//import { BlobServiceClient } from '@azure/storage-blob';\r\nimport axios from 'axios';\r\nimport { GoogleMap, LoadScript, Marker} from '@react-google-maps/api';\r\nimport { useNavigate , Link} from 'react-router-dom';\r\n//TODO: make new advanced marker component too i guess\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '400px'\r\n};\r\nconst markers = [\r\n  { lat: 48.75112, lng: -122.341431 },\r\n  // Add more markers as needed\r\n];\r\nconst center = {\r\n  lat: 48.75112, lng: 238.74011\r\n};\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  //const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const formData = new URLSearchParams();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:8080/login', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n        }\r\n      });\r\n      //Home is temporary? eventually implement on login to load in user map\r\n      if (response.status === 200 && !response.data.includes('Invalid')) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        console.log(response.data)\r\n        console.error('Error logging in');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in', error.response);\r\n    }\r\n  };\r\n  if (isLoggedIn) {\r\n      //load markers and jaunt\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Log in</button>\r\n      <p>\r\n        Don't have an account? <Link to=\"/Register\">Register</Link>\r\n      </p>\r\n    </form>\r\n    \r\n    <LoadScript googleMapsApiKey= {process.env.REACT_APP_APIKEY}>\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={7}\r\n        >\r\n          {markers.map((marker, index) => (\r\n        <Marker key = {index}  position = {center} />\r\n          ))}\r\n          \r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}