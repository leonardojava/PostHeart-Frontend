{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leoda\\\\OneDrive\\\\Documents\\\\GitHub\\\\PostHeart-Frontend\\\\postheart-frontend\\\\src\\\\components\\\\Login.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { BlobServiceClient } from '@azure/storage-blob';\nimport axios from 'axios';\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\nimport { useNavigate, Link } from 'react-router-dom';\n//TODO: make login page the map too?\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new URLSearchParams();\n    formData.append(\"username\", username);\n    formData.append(\"password\", password);\n    try {\n      const response = await axios.post('http://localhost:8080/login', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n      //Home is temporary? eventually implement on login to load in user map\n      if (response.status === 200 && !response.data.includes('Invalid')) {\n        setIsLoggedIn(true);\n      } else {\n        console.log(response.data);\n        console.error('Error logging in');\n      }\n    } catch (error) {\n      console.error('Error logging in', error.response);\n    }\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  function Map() {\n    _s();\n    const {\n      isLoaded,\n      loadError\n    } = useLoadScript({\n      googleMapsApiKey: \"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\"\n    });\n    const mapRef = useRef();\n    const onMapLoad = React.useCallback(map => {\n      mapRef.current = map;\n    }, []);\n    const mapContainerStyle = {\n      height: \"100vh\",\n      width: \"100vw\"\n    };\n    const center = {\n      lat: 48.75112,\n      lng: -121.25991\n    };\n    const options = {\n      zoom: 7,\n      mapId: \"DEMO_MAP_ID\"\n    };\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        id: \"map\",\n        mapContainerStyle: mapContainerStyle,\n        zoom: options.zoom,\n        center: center,\n        options: options,\n        onLoad: onMapLoad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this);\n  }\n  _s(Map, \"1qmCmcJn3Jppftwl0FFq5t2nSCI=\", false, function () {\n    return [useLoadScript];\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s2(Login, \"8HunRjBrqKRQadtAFd6sqHyl9cw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","BlobServiceClient","axios","GoogleMap","useLoadScript","Marker","useNavigate","Link","jsxDEV","_jsxDEV","Login","_s2","_s","$RefreshSig$","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","navigate","handleSubmit","event","preventDefault","formData","URLSearchParams","append","response","post","headers","status","data","includes","console","log","error","Map","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","loadError","googleMapsApiKey","mapRef","onMapLoad","useCallback","map","current","mapContainerStyle","height","width","center","lat","lng","options","zoom","mapId","children","id","onLoad","onSubmit","type","value","onChange","e","target","to","_c","$RefreshReg$"],"sources":["C:/Users/leoda/OneDrive/Documents/GitHub/PostHeart-Frontend/postheart-frontend/src/components/Login.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { BlobServiceClient } from '@azure/storage-blob';\r\nimport axios from 'axios';\r\nimport { GoogleMap, useLoadScript, Marker } from '@react-google-maps/api';\r\nimport { useNavigate , Link} from 'react-router-dom';\r\n//TODO: make login page the map too?\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    const formData = new URLSearchParams();\r\n    formData.append(\"username\", username);\r\n    formData.append(\"password\", password);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:8080/login', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'\r\n        }\r\n      });\r\n      //Home is temporary? eventually implement on login to load in user map\r\n      if (response.status === 200 && !response.data.includes('Invalid')) {\r\n        setIsLoggedIn(true);\r\n      } else {\r\n        console.log(response.data)\r\n        console.error('Error logging in');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error logging in', error.response);\r\n    }\r\n  };\r\n  if (isLoggedIn) {\r\n    return <Map />;\r\n  }\r\n  function Map() {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n      googleMapsApiKey: \"AIzaSyDLLWCcjoAaSeDscglxumRkb--MAJ_jJzQ\"\r\n    });\r\n    const mapRef = useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  const mapContainerStyle = {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  };\r\n  \r\n  const center = {\r\n    lat: 48.75112,\r\n    lng: -121.25991\r\n  };\r\n  \r\n  const options = {\r\n    zoom: 7,\r\n    mapId: \"DEMO_MAP_ID\",\r\n  };\r\n\r\n  if (loadError) return \"Error loading maps\";\r\n  if (!isLoaded) return \"Loading Maps\";\r\n\r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={options.zoom}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n      >\r\n      </GoogleMap>\r\n    </div>\r\n  );\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Email:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Log in</button>\r\n      <p>\r\n        Don't have an account? <Link to=\"/Register\">Register</Link>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}