{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst errorMessage = \"ProxyPolicy is not supported in browser environment\";\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: (_nextPolicy, _options) => {\n      throw new Error(errorMessage);\n    }\n  };\n}\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n    throw new Error(errorMessage);\n  }\n  sendRequest(_request) {\n    throw new Error(errorMessage);\n  }\n}","map":{"version":3,"names":["BaseRequestPolicy","errorMessage","getDefaultProxySettings","_proxyUrl","undefined","proxyPolicy","_proxySettings","create","_nextPolicy","_options","Error","ProxyPolicy","constructor","nextPolicy","options","sendRequest","_request"],"sources":["C:\\Users\\leoda\\OneDrive\\Documents\\GitHub\\PostHeart-Frontend\\node_modules\\@azure\\core-http\\src\\policies\\proxyPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ProxySettings } from \"../serviceClient\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst errorMessage = \"ProxyPolicy is not supported in browser environment\";\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw new Error(errorMessage);\n    },\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw new Error(errorMessage);\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw new Error(errorMessage);\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAKxB,MAAMC,YAAY,GAAG,qDAAqD;AAE1E,OAAM,SAAUC,uBAAuBA,CAACC,SAAkB;EACxD,OAAOC,SAAS;AAClB;AAEA,OAAM,SAAUC,WAAWA,CAACC,cAA8B;EACxD,OAAO;IACLC,MAAM,EAAEA,CAACC,WAA0B,EAAEC,QAA8B,KAAI;MACrE,MAAM,IAAIC,KAAK,CAACT,YAAY,CAAC;IAC/B;GACD;AACH;AAEA,OAAM,MAAOU,WAAY,SAAQX,iBAAiB;EAChDY,YAAYC,UAAyB,EAAEC,OAA6B;IAClE,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,MAAM,IAAIJ,KAAK,CAACT,YAAY,CAAC;EAC/B;EAEOc,WAAWA,CAACC,QAAyB;IAC1C,MAAM,IAAIN,KAAK,CAACT,YAAY,CAAC;EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}